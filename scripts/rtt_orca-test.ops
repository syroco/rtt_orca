#!/usr/bin/env deployer

require("print")
require("os")
import("rtt_orca")
import("eigen_typekit")

loadService("this","orca_helper")  
loadService("this","orca_logger")  

orca_logger.setLogLevel( orca_logger.debug )

var string urdf = "/home/hoarau/isir/orca_ws/src/orca/examples/lwr.urdf"
var string base_frame = "link_0"
var eigen_vector gravity = array(0.0, 0.0, -9.81)

import("rtt_gazebo_embedded")
loadComponent("gazebo","RTTGazeboEmbedded")
setActivity("gazebo",0,10,ORO_SCHED_OTHER)
gazebo.world_path = "worlds/empty.world"
gazebo.configure()
gravity = gazebo.getGravity()
gazebo.insertModelFromURDF( urdf )
gazebo.start()


import("rtt_gazebo_robot_interface")
loadComponent("robot","RttGazeboRobotInterface")
setActivity("robot",0,10,ORO_SCHED_RT)
robot.model_name = "lwr"
robot.configure()
robot.setModelConfiguration(strings("joint_0","joint_1","joint_3","joint_5"),array(-2.2,-0.1,1.47,-1.47))
robot.start()

os.usleep(200000)

loadComponent("regx","rtt_orca::task::RttRegularisationTask<orca::optim::ControlVariable::X>")
setActivity("regx",0.001,20,ORO_SCHED_RT)
regx.robot_model.loadModelFromFile(urdf)
regx.robot_model.setBaseFrame(base_frame)
regx.robot_model.setGravity(gravity)
connectPeers("regx","robot")
regx.connectToRobot("robot")
regx.configure()
regx.start()
os.usleep(200000)
regx.activate()
regx.insertInProblem()

loadComponent("jnt_acc","rtt_orca::task::RttJointAccelerationTask")
setActivity("jnt_acc",0.001,20,ORO_SCHED_RT)
jnt_acc.robot_model.loadModelFromFile(urdf)
jnt_acc.robot_model.setBaseFrame(base_frame)
jnt_acc.robot_model.setGravity(gravity)

jnt_acc.pid.setProportionalGain(array(100.,100.,100.,100.,100.,100.,100.))
jnt_acc.pid.setDerivativeGain(array(1.,1.,1.,1.,1.,1.,1.))
jnt_acc.setDesired(array(0.,0.,0.,0.,0.,0.,0.) , array(0.,0.,0.,0.,0.,0.,0.) , array(0.,0.,0.,0.,0.,0.,0.))

connectPeers("jnt_acc","robot")
jnt_acc.connectToRobot("robot")
jnt_acc.configure()
jnt_acc.start()
os.usleep(200000)
jnt_acc.activate()
jnt_acc.insertInProblem()

loadComponent("cart_task","rtt_orca::task::RttCartesianTask")
setActivity("cart_task",0.001,20,ORO_SCHED_RT)
cart_task.robot_model.loadModelFromFile(urdf)
cart_task.robot_model.setBaseFrame(base_frame)
cart_task.robot_model.setGravity(gravity)
connectPeers("cart_task","robot")
cart_task.connectToRobot("robot")
cart_task.setControlFrame("link_7")
cart_task.configure()
cart_task.start()
os.usleep(200000)
cart_task.activate()
cart_task.insertInProblem()

loadComponent("cart_acc_pid","rtt_orca::common::RttCartesianAccelerationPID")
setActivity("cart_acc_pid",0.001,20,ORO_SCHED_RT)
cart_acc_pid.robot_model.loadModelFromFile(urdf)
cart_acc_pid.robot_model.setBaseFrame(base_frame)
cart_acc_pid.robot_model.setGravity(gravity)
connectPeers("cart_acc_pid","robot")
cart_acc_pid.connectToRobot("robot")

cart_acc_pid.pid.setProportionalGain(array(1000.,1000.,1000.,10.,10.,10.))
cart_acc_pid.pid.setDerivativeGain(array(10.,10.,10.,1.,1.,1.))

cart_acc_pid.setBaseFrame( cart_task.getBaseFrame() )
cart_acc_pid.setControlFrame( cart_task.getControlFrame() )
connect("cart_acc_pid.output.CartesianAcceleration","cart_task.input.CartesianAcceleration",ConnPolicy())
cart_acc_pid.configure()
cart_acc_pid.start()

cart_acc_pid.setDesiredPosition ( array(1.,0.75,0.5) , array(3.14,0.,-3.14))

loadComponent("dyneq","rtt_orca::constraint::RttDynamicsEquationConstraint")
setActivity("dyneq",0.001,30,ORO_SCHED_RT)
dyneq.robot_model.loadModelFromFile(urdf)
dyneq.robot_model.setBaseFrame(base_frame)
dyneq.robot_model.setGravity(gravity)
connectPeers("dyneq","robot")
dyneq.connectToRobot("robot")
dyneq.configure()
dyneq.start()
os.usleep(200000)
dyneq.activate()
dyneq.insertInProblem()

loadComponent("qp","rtt_orca::optim::RttQPSolver<orca::optim::WeightedQPSolver>")
setActivity("qp",0.001,70,ORO_SCHED_RT)
qp.setPrintLevel(0)
qp.configure()
qp.start()

connect("qp.output.JointTorque","robot.command.JointTorque",ConnPolicy())

this.orca_helper.printAll()
